@import './mapp6DVariables.scss';

.segment.power-off {
    fill: var(--m6d-segment-power-off-color);
}

.segment.power-on {
    fill: var(--m6d-segment-power-on-color);
}

.segment.error {
    fill: var(--m6d-segment-error-color);
}

.segment.homing {
    fill: var(--m6d-segment-homing-color);
}

.segment.stopping {
    fill: var(--m6d-segment-stopping-color);
}

.segment > g > rect {
    stroke: var(--m6d-segment-stroke-color);
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: var(--m6d-segment-stroke-width);
}

.segment.highlight > g > rect {
    stroke: var(--m6d-br-orange) !important;
    stroke-width: calc(
        var(--m6d-segment-stroke-width) *
            var(--m6d-stroke-width-highlight-multiplier)
    );
}

.segment > text {
    fill: var(--m6d-main-text-color);
}

.segment > text.text-power-sector-name {
    text-anchor: end;
}

.shuttle.power-off {
    fill: var(--m6d-shuttle-power-off-color);
}

.shuttle.power-on {
    fill: var(--m6d-shuttle-power-on-color);
}

.shuttle.error,
.shuttle.accident {
    fill: var(--m6d-shuttle-error-color);
}

.shuttle.stopping {
    fill: var(--m6d-shuttle-stopping-color);
}

.shuttle.idling {
    fill: var(--m6d-shuttle-idling-color);
}

.shuttle.landed {
    fill: var(--m6d-shuttle-landed-color);
}

.shuttle.motion {
    fill: var(--m6d-shuttle-motion-color);
}

.shuttle.obstacle {
    fill: var(--m6d-shuttle-obstacle-color);
}

.shuttle > rect {
    stroke: var(--m6d-shuttle-stroke-color);
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: var(--m6d-shuttle-stroke-width);
}

.shuttle.highlight > rect {
    stroke: var(--m6d-br-orange);
    stroke-width: calc(
        var(--m6d-segment-stroke-width) *
            var(--m6d-stroke-width-highlight-multiplier)
    );
}

.shuttle > text {
    fill: var(--m6d-main-text-color);
}

.shuttle > .additional-info {
    font-size: 1.2em;
}

.shuttle > foreignObject > .position-info-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0px 0px;
    height: calc(100% - 8px);
    align-content: end;
    padding-left: 6px;
    padding-right: 6px;

    .position-info-x {
        grid-column: 1;
    }
    .position-info-y {
        grid-column: 1;
    }
    .position-info-z {
        grid-column: 1;
    }
    .position-info-rx {
        grid-column: 2;
    }
    .position-info-ry {
        grid-column: 2;
    }
    .position-info-rz {
        grid-column: 2;
    }
}

.shuttle > foreignObject > .position-info-container.cell-count-le-3 {
    grid-template-columns: 1fr;

    .position-info-x {
        grid-column: 1;
    }
    .position-info-y {
        grid-column: 1;
    }
    .position-info-z {
        grid-column: 1;
    }
    .position-info-rx {
        grid-column: 1;
    }
    .position-info-ry {
        grid-column: 1;
    }
    .position-info-rz {
        grid-column: 1;
    }
}

.shuttle > foreignObject > .position-info-container > .position-info {
    fill: var(--m6d-main-text-color);
    font-size: 1em;
}

.shuttle
    > foreignObject
    > .position-info-container.cell-count-eq-3
    > .position-info {
    fill: var(--m6d-main-text-color);
    font-size: 1.5em;
}

.shuttle
    > foreignObject
    > .position-info-container.cell-count-eq-2
    > .position-info {
    fill: var(--m6d-main-text-color);
    font-size: 1.8em;
}

.shuttle
    > foreignObject
    > .position-info-container.cell-count-eq-1
    > .position-info {
    fill: var(--m6d-main-text-color);
    font-size: 2em;
}

.zone.active-open {
    display: none;
}

.zone.active-closed {
    stroke: var(--m6d-zone-main-color);
}

.zone.not-active {
    stroke: var(--m6d-zone-main-color);
    fill: var(--m6d-zone-main-color);
    fill-opacity: 0.3;
}

.zone.error {
    stroke: var(--m6d-zone-error-color);
}

.zone > rect {
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: var(--m6d-zone-stroke-width);
}

.power-sector.disconnected {
    display: none;
}

.power-sector.active-open {
    display: none;
}

.power-sector.active-closed {
    stroke: var(--m6d-power-sector-main-color);
}

.power-sector.not-active {
    stroke: var(--m6d-power-sector-main-color);
    fill: var(--m6d-power-sector-main-color);
    fill-opacity: 0.3;
}

.power-sector.error {
    stroke: var(--m6d-power-sector-error-color);
}

.power-sector > path {
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: var(--m6d-power-sector-stroke-width);
}
